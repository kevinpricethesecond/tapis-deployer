--- # Test Yaml
services:
  - streams

universal-parameters:
  data:
    service_url: https://admin.test.tapis.io
    service_tenant_id: admin
    service_site_id: tacc
    tenants: ["dev", "admin"]
    deployment: test
    storage_class: rbd-new
    image_version: latest
    image_pull: Always

actors:
  service-parameters:
      data:
        service_name: "actors"
        rabbit_pvc: "actors-rabbitmq-vol02"
        mongo_pvc: "actors-mongo-vol02"
        mongo_backup_pvc: "actors-mongo-backup-vol02"
  actors-config:
    file_ext: ".yml"
    template: actors-config.j2
    data:
      tenants:
        - "dev"
        - "admin"
      docker_network: "develop"
      log_file: true
      web_tenat_name: null
      mongo_tls: false
      log_ex: true
      object: "tenant"
  api:
    admin:
      file_ext: ".yml"
      template: admin.j2
      data:
        image_pull: null
    configmap:
      file_ext: ".yml"
      template: configmap.j2
      data:
        path: "develop"
        timeout: "60"
    events:
      file_ext: ".yml"
      template: events.j2
      data:
        image_pull: null
    mes:
      file_ext: ".yml"
      template: mes.j2
      data:
        image_pull: null
    metrics:
      file_ext: ".yml"
      template: metrics.j2
      data:
        image_pull: null
    mongo-pvc:
      file_ext: ".yml"
      template: "mongo-pvc.j2"
      data:
    mongo:
      file_ext: ".yml"
      template: "mongo.j2"
      data:
        init_database: null
    nginx-config:
      file_ext: ".yml"
      template: nginx-config.j2
      data:
        stage: dev
        proxy_set_header: true
    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        volume_mount: true
        volumes: true
    rabbit:
      file_ext: ".yml"
      template: "rabbit.j2"
      data:
    rabbitmq-pvc:
      file_ext: ".yml"
      template: "rabbitmq-pvc.j2"
      data:
    reg:
      file_ext: ".yml"
      template: "reg.j2"
      data:
      image_pull: null
  backup:
    actors-mongo-backup-pvc:
      file_ext: ".yml"
      template: "actors-mongo-backup-pvc.j2"
      data:
        volume_name: "actors-mongo-backup-vol02"
    actors-mongo-backup:
      file_ext: ".yml"
      template: "actors-mongo-backup.j2"
      data:
        volume_name: "actors-mongo-backup-vol02"

admin: 
  service-parameters:
    data:
      service_name: "admin"
  admin-config:
    file_ext: ".yml"
    template: admin-config.j2
    data:
  verification:
    authenticator-test:
      file_ext: ""
      template: "authenticator-test.j2"
      data:
    streams-test:
      file_ext: ""
      template: "streams-test.j2"
      data:
    tenants-test:
      file_ext: ""
      template: "tenants-test.j2"
      data:
    tokens-test:
      file_ext: ""
      template: "tokens-test.j2"
      data:
        

apps:
  service-parameters:
    data:
      service_name: "apps"
      postgres_pvc: "apps-postgres-vol02"
  apps-config:
    file_ext: ".yml"
    template: apps-config.j2
    data:
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi" 
  postgres:
    apps-init-db:
      file_ext: ".yml"
      template: "apps-init-db.j2"
      data:
        monitor_password: "test"
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
    service:
      file_ext: ".yml"
      template: "service.j2"
      data:
        apps-external: true

authenticator:
  service-parameters:
    data:
      service_name: "authenticator"
      postgres_pvc: "authenticator-postgres-vol02"
  authenticator-config:
    file_ext: ".yml"
    template: authenticator-config.j2
    data:
      "tenants": ["dev", "admin"]
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: dev
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        uncomment: false
      
container-registry:
  service-parameters:
    data:
      service_name: "container-registery"
  container-registery-config:
    file_ext: ".yml"
    template: "container-registery-config.j2"
    data:
      
files:
  service-parameters:
    data:
      service_name: "files"
  files-config:
    file_ext: ".yml"
    template: "files-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      replicas: 1
      image_version: dev
      nodeSelector: "yes"
      memory: "8Gi"
      args: ["-Xdebug", 
             "-Xmx3g", 
             "-agentlib:jdwp=transport=dt_socket,server=y,address=*:8000,suspend=n", 
             "-cp", 
             "target/tapis-files.jar:target/dependencies/*", 
             "edu.utexas.tacc.tapis.files.api.FilesApplication"]
      site_id: true
      node_name: true
      files-debug: true
  configmap:
    file_ext: ".yml"
    template: "configmap.j2"
    data:
      log_leve: true
      rabbitmq_hostname: files-rabbitmq
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
  rabbitmq-pvc:
    file_ext: ".yml"
    template: "rabbitmq-pvc.j2"
    data:
      
  service:
    file_ext: ".yml"
    template: "service.j2"
    data:
      nodePort: 31451
  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: dev
      replicas: 1
      node_name: true
      memory: "8Gi"
      commands: [ "java",
                  "-Xmx3g", 
                  "-cp",
                  "target/tapis-files.jar:target/dependencies/*", 
                  "edu.utexas.tacc.tapis.files.lib.transfers.TransfersApp" ]

jobs:
  service-parameters:
    data:
      service_name: "jobs"
      postgres_pvc: "jobs-postgres-vol02"
      rabbitmq_pvc: "jobs-rabbitmq-vol02"
  jobs-config:
    file_ext: ".yml"
    template: "jobs-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
        node_selector: true
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  rabbitmq:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  readers:
    jobrdr-AltQueue:
      file_ext: ".yml"
      template: jobrdr-AltQueue.j2
      data:
        image_version: dev
        memory: "4Gi"
    jobrdr-DeadLetter:
      file_ext: ".yml"
      template: jobrdr-DeadLetter.j2
      data:
        image_version: dev
        memory: "4Gi"
    jobrdr-Recovery:
      file_ext: ".yml"
      template: jobrdr-Recovery.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
        note_selector: true
  workers:
    jobwkr-DefaultQueue:
      file_ext: ".yml"
      template: jobwkr-DefaultQueue.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
        node_selector: true

meta:
  service-parameters:
    data:
      service_name: "meta"
      mongo_backup_pvc: "mongo-backup-vol02"
      restheart_mongo_pvc: "restheart-mongo-vol02"
  meta-config:
    file_ext: ".yml"
    template: "meta-config.j2"
    data:
      
  api:
    restheart-security:
      file_ext: ".yml"
      template: restheart-security.j2
      data:
        image_version: dev
        stage: develop
    restheart:
      file_ext: ".yml"
      template: restheart.j2
      data:
        image_version: dev
  backup:
    pbm:
      pbm:
        file_ext: ".yml"
        template: pbm.j2
        data:
    mongo-backup-claim0-pvc:
      file_ext: ".yaml"
      template: "mongo-backup-claim0-pvc.j2"
      data:
        
    mongo-backup-deployment:
      file_ext: ".yaml"
      template: mongo-backup-deployment.j2
      data:
        image_version: .1
  mongo:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:

monitoring:
  service-parameters:
    data:
      service_name: "monitoring"   
      elastic_pvc: "elasticsearch-data-vol02"
      grafana_pvc: "grafana-vol02"
      prometheus_pvc: "prometheus-vol02"
      stern_pvc: "stern-data-vol02"
  monitoring-config:
    file_ext: ".yml"
    template: "monitoring-config.j2"
    data:
  apps:
    elasticsearch:
      file_ext: ".yml"
      template: "elasticsearch.j2"
      data:
        max_buckets: true
        volume_mounts: true
        volumes: true
    grafana:
      file_ext: ".yml"
      template: "grafana.j2"
      data:
        
    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        args: true
  pvc:
    elasticsearch-data:
      file_ext: ".yml"
      template: "elasticsearch-data.j2"
      data:
    grafana-pvc:
      file_ext: ".yml"
      template: "grafana-pvc.j2"
      data:
    prometheus-pvc:
      file_ext: ".yml"
      template: "prometheus-pvc.j2"
      data:        
  secrets:
    file_ext: ".yml"
    template: "secrets.j2"
    data:
      username: YWRtaW4=
      password: cGVyaGFwc0NhbXBTZWFyY2hGcmVxdWVudGx5
        
notifications:
  service-parameters:
    data:
      service_name: "notifications"
  notifications-config:
    file_ext: ".yml"
    template: "notifications-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: dev
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:

  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: dev
        
pgrest:
  service-parameters:
    data:
      service_name: "pgrest"   
      postgres_pvc: "pgrest-postgres-vol01"
  pgrest-config:
    file_ext: ".yml"
    template: "pgrest-config.j2"
    data:
  api-deploy:
    file_ext: ".yml"
    template: api-deploy.j2
    data:
      image_version: dev
  postgres-deploy:
    file_ext: ".yml"
    template: "postgres-deploy.j2"
    data:
  postgres-pvc:
    file_ext: ".yml"
    template: "postgres-pvc.j2"
    data:

pgrest-a2cps-dev:
  service-parameters:
    data:
      service_name: "pgrest-a2cps-dev"   
      template_directory: "pgrest"
  pgrest-config:
    file_ext: ".yml"
    template: "pgrest-config.j2"
    data:    
      tenants: ["a2cps-dev"]     
  api-deploy:
    file_ext: ".yml"
    template: api-deploy.j2
    data:
      image_version: dev
  api-service:
    file_ext: ".yml"
    template: "api-service.j2"
    data:
      service_name: "pgrest-a2cps-prod"

pgrest-a2cps-prod:
  service-parameters:
    data:
      service_name: "pgrest-a2cps-prod"   
      template_directory: "pgrest"
  pgrest-config:
    file_ext: ".yml"
    template: "pgrest-config.j2"
    data:          
      tenants: ["a2cps"]
  api-deploy:
    file_ext: ".yml"
    template: api-deploy.j2
    data:
      image_version: dev
  api-service:
    file_ext: ".yml"
    template: "api-service.j2"
    data:
      service_name: "pgrest-a2cps-prod"

security:
  service-parameters:
    data:
      service_name: "security-kernel"
      postgres_pvc: "sk-postgres-vol01"
  security-kernel-config:
    file_ext: ".yml"
    template: "security-kernel-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "16Gi"
        auto_service: false
        renew_sk: something
        min: 3
        max: 3
        volumes: something
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
skadmin:
  service-parameters:
      data:
        service_name: "skadmin"
  skadmin-config:
    file_ext: ".yml"
    template: "skadmin-config.j2"
    data:
  initialLoad:
    tapis-monitoring-secrets:
      file_ext: ".json"
      template: tapis-monitoring-secrets.j2
      data:
        passwords: something
  renew-sk-secret:
     renew-sk-secret:
       file_ext: ".yml"
       template: "renew-sk-secret.j2"
       data:
         image_pull: Always
  sk-admin-init:
    file_ext: ".yml"
    template: sk-admin-init.j2
    data:
      image_version: dev
  updateSecrets:
    sk-admin-update:
      file_ext: ".yml"
      template: sk-admin-update.j2
      data:
        image_version: dev
  util:
    file_ext: ".yml"
    template: "util.j2"
    data:
      image_version: dev
  util3-job:
    file_ext: ".yml"
    template: util3-job.j2
    data:
      image_version: dev

streams:
  service-parameters:
    data:
      service_name: "streams"
      influx_pvc: "influx-vol01"
      postgres_pvc: "postgres-vol01"
      kapacitor_pvc: "streams-kapacitor-vol01"
      mysql_pvc: "streams-mysql-vol01"
  streams-config:
    file_ext: ".yml"
    template: streams-config.j2
    data:
      "tenant": {
        "admin":{"stream_db":"streams_admin","tapis_base_url":"https://admin.test.tapis.io"},
        "dev":{"stream_db":"StreamsDevDB","tapis_base_url":"https://dev.test.tapis.io"}
      }
      "log_level": "DEBUG"
      "show_traceback": false
  kapacitor-config:
    file_ext: ".yml"
    template: kapacitor-config.j2
    data:
      "tenant": {
        "admin":{"stream_db":"streams_admin","tapis_base_url":"https://admin.test.tapis.io"},
        "dev":{"stream_db":"streams_dev","tapis_base_url":"https://dev.test.tapis.io"}
      }
  api: 
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        noke_name: null
        process: 10
        threads: null
    deploy.yml:
      file_ext: ".OLD"
      template: "deploy.yml.j2"
      data:
  influx:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  influx2:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  kapacitor:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  mysql:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
  
systems:
  service-parameters:
      data:
        service_name: "systems"
        postgres_pvc: "systems-postgres-vol02"
  systems-config:
    file_ext: ".yml"
    template: "systems-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:

tenants-api:
  service-parameters:
    data:
      service_name: "tenants"
      postgres_pvc: "tenants-postgres-vol02"
  tenants-config:
    file_ext: ".yml"
    template: tenants-config.j2
    data:
      "postgres_user": "tenants"
      "log_level": "DEBUG"
      "show_traceback": false
      "test_jwt": null
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        image_pull: Always
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: dev
        image_pull: Always
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
tokens:
  service-parameters:
      data:
        service_name: "tokens"
  tokens-config:
    file_ext: ".yml"
    template: tokens-config.j2
    data:
      "use_sk": true
      "tenants": ["dev", "admin"]
      "log_level": "DEBUG"
      "show_traceback": false
      # "dev_jwt_private_key": "-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDHP3gxDezoHCX0+9tGZe9Vxu7tqJvJYIScjoJOW6gHIBb1TiEMq86VRjoN1XD8HZWvsHysCu1pnefkVAeevMSJeFN2qQ3yMCLzwPsL8yQePWhe8IzD/vGof0EdlSpFLSYeAXcvLGCl4iaDm5KgucohoxvCC30HqCnFG2ZoxVCPczc81I80sGfd89vi4F45aiPWr/lxHp1pDR8xyoP7IU/MJEOSvqsnTFUzFeti2WUQcU2+VBN6a0/YVVzvB1cuT3Bt8IkKv8fjnX5TdrLCNVhIA7vuNhLHCqKoUoxzL9llmOyEY2DE0GH/X/KibVqcdLsNbOrCGJBjhg8IkmR8YZZHAgMBAAECggEAL2gJh9phWKSB33UhKfHM7SLE7GTmlBZT1xANLumd4/wdmkX5lRM3tsqbu3jiRgof+EpMj36WGEAK0YewvHL7bB3l9eCpQct0NXzf/mreWBeSQqyHQYbiJo4IhypbgVQJsq/0lJPBdxaExWF5lKY/0psFWrjzCaRYM96eEiWIUmjSwUfW3727vgWIlosOmD0jvhYrDiIIJQarhphcKa/+gSLq8gVfxL0IvO4++xiVM3oP/UKz7la+sHIQVpvwoE1LSw0vD5DFpx6e0v3HlsZrROroxEqvtywVVDPa8F0m0yaYGwuIpnOQRdEbKyDoVzzxRQutWsQ9nOGgdfdswKbQKQKBgQDvEPC4XiZlBAoSVsduRew0dyJNM/Vh6fj37h8lOia5XNNHWYUPxv/pOzLH43Kpx0hEtbgEMYfRt+f7nQyXIPYP0lSkfQWrpPDIHNNTfegHTlB8UiJ0yNYMS+mDPgCIE/FJrMOR5hgt5fjJ9jvL2Bw/gjMNWU1FY5K/2n5GL2FWxQKBgQDVXH4pjpIY2tgxqqPYNNajyGXXYSWmGFccnxF1eZvfCArlpnqj/lquS8xJarB9t/3ImwbrOx6csXK8YLOXpPeZxLHGkA+gSyXGuDI2XISTyiKp5OGgGMW+ZhwuyLqAz2gtgu6AtLhB3gwKk0U34ezwVsn9FoxoQQakxZDdNCKpmwKBgDmJbTYiSsFTKI1jX1o17/Rsm8/S6oLnSel54PsXtMw2AA+TBwhWD691dPJQ1n7wHH+U8LXpqdOanHWdRbN11mLWb1KrWFsINn8jGOVmTxq7CXnyVqKe141cE9ZnbL9TdWYS83rA0x7w02DgJ2IXIC1Uy66xyHwjy+Tq1CtWKeo1AoGALIAnHDnNRPvYHbvOgpi6r9xrSVnMxXDMMn8G4C6mEQWXaECp0ayKc1IB4Mos13vZpc6XydZB00K7gIjWzGku71Z0EcsYR0GFNoZSir4PNNfzFOZVHNQt4kFf3W4mYBliTCPD5PpMeAh9EHOY+0fW6GXhqTTbwh7V6OYACfMGy8MCgYAnpo5VhSZayPlrVn6s+NbOtnJEavuAHwCA8OmsE/mdIy5iee8OB9LxpHLle/xdY0uJRZnkUzBds0auoF1OBj7c5jnEaRMncskhFi3gJjxfNudqmIYELDaYP50B0Fza4GQBiFoeiYbXlUMENt4iEzjzeaJTiiWID+dmhxF+YY5r/w==\\n-----END PRIVATE KEY-----"
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: dev

vault: 
  service-parameters:
      data:
        service_name: "vault"
        pvc: "vault-vol02"
  vault-config:
    file_ext: ".yml"
    template: vault-config.j2
    data: 
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
  vault-auto-unseal:
    file_ext: ".yml"
    template: "vault-auto-unseal.j2"
    data:
  vault-init:
    file_ext: ".yml"
    template: "vault-init.j2"
    data:
      volume_number: "02"
  vault:
    file_ext: ".hcl"
    template: "vault.hcl.j2"
    data:
 
