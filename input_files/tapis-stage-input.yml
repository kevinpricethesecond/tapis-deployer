--- # Test Yaml
services:
  - actors
  - admin
  - apps
  - authenticator
  - files
  - jobs
  - meta
  - monitoring
  - pgrest
  - security
  - skadmin
  - streams
  - systems
  - tenants-api
  - tokens

universal-parameters:
  data:
    service_url: https://admin.staging.tapis.io
    service_tenant_id: admin
    service_site_id: tacc
    tenants: ["dev", "admin", "a2cps", "tacc", "cii", "github-demo"]
    deployment: develop
    storage_class: rbd-new
    image_version: latest
    image_pull: Always

actors:
  service-parameters:
      data:
        service_name: "actors"
        rabbit_pvc: "actors-rabbitmq-vol02"
        mongo_pvc: "actors-mongo-vol02"
        mongo_backup_pvc: "actors-mongo-backup-vol02"
  actors-config:
    file_ext: ".yml"
    template: actors-config.j2
    data:
      tenants:
        - "dev"
        - "admin"
        - "a2cps"
        - "tacc"
        - "cii"
        - "github-demo"
      docker_network: "develop"
      log_file: true
      web_tenat_name: null
      mongo_tls: false
      log_ex: true
      object: "tenant"
  api:
    admin:
      file_ext: ".yml"
      template: admin.j2
      data:
        image_pull: Always
        image_version: "1.0.1"
    configmap:
      file_ext: ".yml"
      template: configmap.j2
      data:
        path: "staging"
        timeout: "60"
    events:
      file_ext: ".yml"
      template: events.j2
      data:
        image_pull: Always
        image_version: "1.0.1"
    mes:
      file_ext: ".yml"
      template: mes.j2
      data:
        image_pull: Always
        image_version: "1.0.1"
    metrics:
      file_ext: ".yml"
      template: metrics.j2
      data:
        image_pull: Always
        image_version: "1.0.1"
    mongo-pvc:
      file_ext: ".yml"
      template: "mongo-pvc.j2"
      data:
    mongo:
      file_ext: ".yml"
      template: "mongo.j2"
      data:
        init_database: null
    nginx-config:
      file_ext: ".yml"
      template: nginx-config.j2
      data:
        stage: stage
        proxy_set_header: true
    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        volume_mount: true
        volumes: true
    rabbit:
      file_ext: ".yml"
      template: "rabbit.j2"
      data:
        volume_number: "02"
    rabbitmq-pvc:
      file_ext: ".yml"
      template: "rabbitmq-pvc.j2"
      data:
        volume_number: "02"
    reg:
      file_ext: ".yml"
      template: "reg.j2"
      data:
        image_pull: Always
        image_version: "1.0.1"
  backup:
    actors-mongo-backup-pvc:
      file_ext: ".yml"
      template: "actors-mongo-backup-pvc.j2"
      data:
    actors-mongo-backup:
      file_ext: ".yml"
      template: "actors-mongo-backup.j2"
      data:

admin:
  service-parameters:
    data:
      service_name: "admin"
  admin-config:
    file_ext: ".yml"
    template: admin-config.j2
    data:
  verification:
    authenticator-test:
      file_ext: ""
      template: "authenticator-test.j2"
      data:
    streams-test:
      file_ext: ""
      template: "streams-test.j2"
      data:
    tenants-test:
      file_ext: ""
      template: "tenants-test.j2"
      data:
    tokens-test:
      file_ext: ""
      template: "tokens-test.j2"
      data:


apps:
  service-parameters:
    data:
      service_name: "apps"
  apps-config:
    file_ext: ".yml"
    template: apps-config.j2
    data:
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: "8Gi"
  postgres:
    apps-init-db:
      file_ext: ".yml"
      template: "apps-init-db.j2"
      data:
        monitor_password: "60f0c5bf8ed23120fc60"
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
    service:
      file_ext: ".yml"
      template: "service.j2"
      data:
        apps-external: true

authenticator:
  service-parameters:
    data:
      service_name: "authenticator"
  authenticator-config:
    file_ext: ".yml"
    template: authenticator-config.j2
    data:
      tenants: ["dev", "admin", "a2cps", "tacc", "cii", "github-demo"]
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: staging
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        uncomment: false
        volume_number: "02"

container-registry:
  service-parameters:
    data:
      service_name: "container-registery"
  container-registery-config:
    file_ext: ".yml"
    template: "container-registery-config.j2"
    data:

files:
  service-parameters:
    data:
      service_name: "files"
  files-config:
    file_ext: ".yml"
    template: "files-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      replicas: 1
      image_version: staging
      nodeSelector: "yes"
      memory: "8Gi"
      args: ["-Xdebug",
             "-Xmx3g",
             "-agentlib:jdwp=transport=dt_socket,server=y,address=*:8000,suspend=n",
             "-cp",
             "target/tapis-files.jar:target/dependencies/*",
             "edu.utexas.tacc.tapis.files.api.FilesApplication"]
      site_id: true
      node_name: true
      files-debug: true
  configmap:
    file_ext: ".yml"
    template: "configmap.j2"
    data:
      log_leve: true
      rabbitmq_hostname: files-rabbitmq
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: staging
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
  rabbitmq-pvc:
    file_ext: ".yml"
    template: "rabbitmq-pvc.j2"
    data:
  service:
    file_ext: ".yml"
    template: "service.j2"
    data:
      nodePort: 32039
  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: staging
      replicas: 1
      node_name: true
      memory: "8Gi"
      commands: [ "java",
                  "-Xmx3g",
                  "-cp",
                  "target/tapis-files.jar:target/dependencies/*",
                  "edu.utexas.tacc.tapis.files.lib.transfers.TransfersApp" ]

jobs:
  service-parameters:
    data:
      service_name: "jobs"
      postgres_pvc: "jobs-postgres-vol02"
      rabbitmq_pvc: "jobs-rabbitmq-vol02"
  jobs-config:
    file_ext: ".yml"
    template: "jobs-config.j2"
    data:
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: null
        node_name: false
        node_selector: false
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: staging
        memory: null
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        volume_number: "02"
  rabbitmq:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        volume_number: "02"
  readers:
    jobrdr-AltQueue:
      file_ext: ".yml"
      template: jobrdr-AltQueue.j2
      data:
        image_version: staging
        memory: null
    jobrdr-DeadLetter:
      file_ext: ".yml"
      template: jobrdr-DeadLetter.j2
      data:
        image_version: staging
        memory: null
    jobrdr-Recovery:
      file_ext: ".yml"
      template: jobrdr-Recovery.j2
      data:
        image_version: staging
        memory: null
        node_name: false
        note_selector: false
  workers:
    jobwkr-DefaultQueue:
      file_ext: ".yml"
      template: jobwkr-DefaultQueue.j2
      data:
        image_version: staging
        memory: null
        node_name: false
        note_selector: false

meta:
  service-parameters:
    data:
      service_name: "meta"
      mongo_backup_pvc: "mongo-backup-vol02"
      restheart_mongo_pvc: "restheart-mongo-vol02"
  meta-config:
    file_ext: ".yml"
    template: "meta-config.j2"
    data:

  api:
    restheart-security:
      file_ext: ".yml"
      template: restheart-security.j2
      data:
        image_version: staging
        stage: develop
    restheart:
      file_ext: ".yml"
      template: restheart.j2
      data:
        image_version: staging
  backup:
    pbm:
      pbm:
        file_ext: ".yml"
        template: pbm.j2
        data:
    mongo-backup-claim0-pvc:
      file_ext: ".yaml"
      template: "mongo-backup-claim0-pvc.j2"
      data:

    mongo-backup-deployment:
      file_ext: ".yaml"
      template: mongo-backup-deployment.j2
      data:
        image_version: .1
        volume_number: "02"
  mongo:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        volume_number: "02"

monitoring:
  service-parameters:
    data:
      service_name: "monitoring"
      elastic_pvc: "elasticsearch-data-vol02"
      grafana_pvc: "grafana-vol02"
      prometheus_pvc: "prometheus-vol02"
  monitoring-config:
    file_ext: ".yml"
    template: "monitoring-config.j2"
    data:
  apps:
    elasticsearch:
      file_ext: ".yml"
      template: "elasticsearch.j2"
      data:
        max_buckets: true
        volume_mounts: true
        volumes: true
    grafana:
      file_ext: ".yml"
      template: "grafana.j2"
      data:

    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        args: true
  pvc:
    elasticsearch-data:
      file_ext: ".yml"
      template: "elasticsearch-data.j2"
      data:
    grafana-pvc:
      file_ext: ".yml"
      template: "grafana-pvc.j2"
      data:
    prometheus-pvc:
      file_ext: ".yml"
      template: "prometheus-pvc.j2"
      data:

  stern:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:

    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
    util.yml:
      file_ext: ".bak"
      template: "util.yml.j2"
      data:

  secrets:
    file_ext: ".yml"
    template: "secrets.j2"
    data:
      username: YWRtaW4=
      password: cGVyaGFwc0NhbXBTZWFyY2hGcmVxdWVudGx5

notifications:
  service-parameters:
    data:
      service_name: "notifications"
  notifications-config:
    file_ext: ".yml"
    template: "notifications-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: staging
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: staging
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:

  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: staging

pgrest:
  service-parameters:
    data:
      service_name: "pgrest"
      postgres_pvc: "pgrest-postgres-vol02"
  pgrest-config:
    file_ext: ".yml"
    template: "pgrest-config.j2"
    data:
  api-deploy:
    file_ext: ".yml"
    template: api-deploy.j2
    data:
      image_version: staging
  postgres-deploy:
    file_ext: ".yml"
    template: "postgres-deploy.j2"
    data:
  postgres-pvc:
    file_ext: ".yml"
    template: "postgres-pvc.j2"
    data:

security:
  service-parameters:
    data:
      service_name: "security-kernel"
      postgres_pvc: "sk-postgres-vol02"
  security-kernel-config:
    file_ext: ".yml"
    template: "security-kernel-config.j2"
    data:

  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: "16Gi"
        auto_service: false
        renew_sk: something
        min: 3
        max: 3
        volumes: something
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: staging
        memory: null
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:

skadmin:
  service-parameters:
      data:
        service_name: "skadmin"
  skadmin-config:
    file_ext: ".yml"
    template: "skadmin-config.j2"
    data:
  initialLoad:
    tapis-monitoring-secrets:
      file_ext: ".json"
      template: tapis-monitoring-secrets.j2
      data:
        passwords: something
  renew-sk-secret:
     renew-sk-secret:
       file_ext: ".yml"
       template: "renew-sk-secret.j2"
       data:
         image_pull: Always
  sk-admin-init:
    file_ext: ".yml"
    template: sk-admin-init.j2
    data:
      image_version: staging
  updateSecrets:
    sk-admin-update:
      file_ext: ".yml"
      template: sk-admin-update.j2
      data:
        image_version: staging
  util:
    file_ext: ".yml"
    template: "util.j2"
    data:
      image_version: staging
  util3-job:
    file_ext: ".yml"
    template: util3-job.j2
    data:
      image_version: staging

streams:
  service-parameters:
    data:
      service_name: "streams"
      influx_pvc: "influx-vol02"
      influx2_pvc: "influx2-vol01"
      postgres_pvc: "postgres-vol02"
      kapacitor_pvc: "streams-kapacitor-vol02"
      mysql_pvc: "streams-mysql-vol02"
  streams-config:
    file_ext: ".yml"
    template: streams-config.j2
    data:
      tenant:
        dev:
          stream_db: StreamsDevDB
          tapis_base_url: https://dev.staging.tapis.io
        tacc:
          stream_db: StreamsTACCDB
          tapis_base_url: https://tacc.staging.tapis.io
      "log_level": "DEBUG"
      "show_traceback": false
  kapacitor-config:
    file_ext: ".yml"
    template: kapacitor-config.j2
    data:
      tenant:
        dev:
          stream_db: StreamsDevDB
          tapis_base_url: https://dev.staging.tapis.io
        tacc:
          stream_db: StreamsTACCDB
          tapis_base_url: https://tacc.staging.tapis.io
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        node_name: c04
        process: 10
        threads: null
    deploy.yml:
      file_ext: ".OLD"
      template: "deploy.yml.j2"
      data:
  influx:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  influx2:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  kapacitor:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_name: "streams-kapacitor-vol02"
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        volume_name: "streams-kapacitor-vol02"

  mysql:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:


systems:
  service-parameters:
      data:
        service_name: "systems"
  systems-config:
    file_ext: ".yml"
    template: "systems-config.j2"
    data:
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        nodeSelector: "yes"
        image_version: staging
        memory: "8Gi"
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:

tenants-api:
  service-parameters:
    data:
      service_name: "tenants"
      postgres_pvc: "tenants-postgres-vol02"
  tenants-config:
    file_ext: ".yml"
    template: tenants-config.j2
    data:
      "postgres_user": "tenants"
      "log_level": "DEBUG"
      "show_traceback": false
      "test_jwt": null
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        image_pull: Always
  postgres:
    deploy:
      file_ext: ".yml"
      template: "deploy.j2"
      data:
        volume_number: "02"
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: staging
        image_pull: Always
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        volume_number: "02"

tokens:
  service-parameters:
      data:
        service_name: "tokens"
  tokens-config:
    file_ext: ".yml"
    template: tokens-config.j2
    data:
      "use_sk": true
      "tenants": ["dev", "admin", "a2cps", "tacc", "cii", "github-demo"]
      "log_level": "DEBUG"
      "show_traceback": false
      "use_allservices_password": false
      "allservices_password": ""
      "dev_jwt_private_key": "\"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCodlCk4xNcsDt4n56U0dmOkzOyXltlfhL0rn1QP05PzVCV4ajTv8toMPL8JoT8bp7yz0MqSLBoxYWpBOYe6taVRrKR0jiLYd+B3mS3FtZwPlM47EqLee9Iu0btN6y6gvhb995VDK0iE47hswMJTstMaNsVuHpGhJSfUVoGkkvj6sPl39pHkDvJtw5aWREXcRZ+jUY2wKRpp99mw2VSRZGYWiXi8lshwNv3zBhsn/Tzcj+xwsf0+BTCfWDCIjGtZnud31UQv5F/OY6y0Tt2PIvUEgNZBFBfEfhosGvN+SqEK2v9joZ95LAjXPiQt6dR0sVIXe5qRz5pSwVk+EcMRLYPAgMBAAECggEAI5C2/dii4dKi+5hXVnvnPl59b47UJN01C0s7UZHL6rUh6kK17d50Bw8ufWV0dga0r/Zp66dk9vmcek56dtSFcQZ39Kk5HtQO59AX2z+LDi9aSo44PrIDfotrMfGrGcVEwcXWvoXql2Mhqyyr228zJHKOrktAJVsgNXJrWy/PrdIuOrqDhTiPCmuXj4QneHVhpGWWWyXcefHaHKKoeolgHFx49jos5mQigg7z1wHuEVlwjXcVm5GTm9lWpH94p0HTSLrAA+QNMwpEaThXakXiQV0h3gC3bc7qpaqGXeauNF42vKImokHLjbYOJLqotvce8g2J2uEeTLBSx+0WfH6noQKBgQDpMxR67JWxK2SjNIaznAP0MmR6YkdNMNiF5zUiPnUBTfd1fa3Udm1VPMeo512MQR6xsHp6RNnANzXx9iYDTeUOnGkfrTvCAfQ0PCNXlzPkem4VNa3Xo/8vV+Hl409EgWeHteOcjeyzeKi0PhUPhFk12thtM0qjAvI955HVuzSsywKBgQC47uBsdcTONVPJv7GGBzcRY+5HCvDyknd/tx9y3ZrueRMtkfxPANzMQlqyKsliDI2w9Tm9naGQnRkOed57XefO8oxS3qp/Wn8EZk8lUlEsbwpfwlZMDl1z8Y2KuCtp6fbTuRu35jED2trUJXlqs1o4ACBC0Rgd63EjZ8qua2OXTQKBgQCD13kwtik7bUkMbFnrmb0yhnsAJighoAgKTFlh7uW/wxCwwElS4VGW6zIGcCgXb4mm9BuKnPpvDcfV8FA1dgiWZh+Y5Rvv56LlFUr17mpMNlueaibKz9EqNwlkK0tZc7/Qnij9DdBQ91qJ7L+DclPterj5pBICb1v9W7q7l4eEWQKBgQCNMHsQ81zdHmOo7Pxo2ktVsJizjovkdqRbUoDlHoFxvehBa2pZGsx3+dTqn7X+cJ0g1ChQNu+py/bcUXjlcQ1Qt2cgwbUj5ACDaGTWlqE4rlIaR/HAwVrh8TJiDTe/9gsnG/UokssrKUTWoQGwz9t6U8ZNnPuvpBhNsqlQPtbbJQKBgQCQkkBT997FNoz2q/MDLYhh+Q3C+rPXDwHD1kjkf/ANjz/RELwAvK+6INACEfIqrbRAJ5K1f2cNR8WDEDg4wBobSDnyd21xYM4P00E0hEJIIHmNjJcaiW2I8S3yDVVzBmMBR9E+vTK+4e3BOwrFdAbUMXNKjVSXFn9q8P03Y2ke4g==\\n-----END PRIVATE KEY-----\""

  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: staging
  create_tenant_token_roles:
    file_ext: ".py"
    template: create_tenant_token_roles.j2
    data:

