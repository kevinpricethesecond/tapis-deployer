#!/bin/bash

# global tapis burndown script

# ENTER ./burndown OR ./burndown --noprompt

# ... stop all components in the REVERSE order as burnup
#     databases are shutdown, volumes are preserved
#     services remain up
#     secrets are left as-is
#     configmaps are left as-is     

# --------------- No Prompt Option ----------------
noprompt=0
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -n|--noprompt) noprompt=1; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

# --------------- User Confirmation ---------------
while [ $noprompt -eq 0 ]; do
    read -p "Start non-destructive Tapis burndown (y/n)? " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

# ----------- Burndown Services & DBs -------------
here=`pwd`

# echo "elastic:"
# cd $here/elastic
# ./burndown

echo "monitoring:"
cd $here/monitoring
./burndown

echo "actors:"
cd $here/actors/api
./burndown

echo "streams:"
cd $here/streams/api
./burndown

cd $here/streams/chords
./burndown

cd $here/streams/influx
./burndown

cd $here/streams/mysql
./burndown

echo "meta:"
cd $here/meta/api
./burndown

cd $here/meta/mongo
./burndown

echo "jobs:"
cd $here/jobs/readers
./burndown

cd $here/jobs/workers
./burndown

cd $here/jobs/api
./burndown

cd $here/jobs/rabbitmq
./burndown

cd $here/jobs/postgres
./burndown

echo "apps:"
cd $here/apps/api
./burndown

cd $here/apps/postgres
./burndown

echo "files:"
cd $here/files/api
./burndown

cd $here/files/postgres
./burndown

echo "systems:"
cd $here/systems/api
./burndown

cd $here/systems/postgres
./burndown

echo "authenticator:"
cd $here/authenticator/api
./burndown

cd $here/authenticator/postgres
./burndown

cd $here/authenticator/ldap
./burndown

echo "tokens:"
cd $here/tokens-api
./burndown

# vault secret renewed in here
cd $here/security-kernel/api
./burndown

echo "security-kernel:"
cd $here/security-kernel/postgres
./burndown

echo "tenants:"
cd $here/tenants-api/api
./burndown

cd $here/tenants-api/postgres
./burndown

echo "vault:"
cd $here/vault 
./burndown


# kubectl delete `kubectl get job -o name`
