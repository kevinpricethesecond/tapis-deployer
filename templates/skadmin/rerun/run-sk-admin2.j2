#!/bin/bash

echo "debug100"
#export KUBE_TOKEN=/var/run/secrets/kubernetes.io/serviceaccount/token
export KUBE_TOKEN=`cat /var/run/secrets/kubernetes.io/serviceaccount/token`
export KUBE_NAMESPACE=`cat /var/run/secrets/kubernetes.io/serviceaccount/namespace`

VAULT_SECRETID=`curl -s -X POST -H "X-Vault-Token: $VAULT_TOKEN" {{universal_param["vault_url"]}}/v1/auth/approle/role/sk/secret-id | jq -r .data.secret_id`
VAULT_ROLEID=`curl -s -X GET -H "X-Vault-Token: $VAULT_TOKEN" {{universal_param["vault_url"]}}/v1/auth/approle/role/sk/role-id | jq -r .data.role_id`

echo debug100 roleid
echo $VAULT_ROLEID
echo debug110 secretid
echo $VAULT_SECRETID
echo debug120 token
echo $KUBE_TOKEN
echo debug130 namespace
echo $KUBE_NAMESPACE

java -Djdk.tls.client.protocols=TLSv1.2 -cp /usr/local/bin/shaded-securitylib.jar edu.utexas.tacc.tapis.security.commands.SkAdmin -c -i /tmp/initialLoad -vr $VAULT_ROLEID -vs $VAULT_SECRETID -b {{universal_param["vault_url"]}} -dm -kt KUBE_TOKEN -kn $KUBE_NAMESPACE -ku https://kubernetes.default.svc.cluster.local

kubectl delete secret tapis-sk-vault-secrets
kubectl create secret generic tapis-sk-vault-secrets --from-literal=vault-secretid=$VAULT_SECRETID --from-literal=vault-roleid=$VAULT_ROLEID

