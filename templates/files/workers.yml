---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: files-workers
  name: files-workers
spec:
  replicas: {{files_replicas}}
  selector:
    matchLabels:
      app: files-workers
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: files-workers
    spec:
      {%- if files_node_selector %}
      nodeSelector:
        exempt: "{{files_node_selector}}"
      {%- endif%}
      containers:
        - envFrom:
            - configMapRef:
                name: files-environment-vars
          env:
            {%- if files_node_name == true %}
            - name: TAPIS_LOCAL_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {%- endif%}
            - name: TOKENS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: service_site_url
            - name: TENANTS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: service_site_url
            - name: TAPIS_SITE_ID
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: site_id
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: rabbitmq-password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: postgres-password
            - name: SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tapis-files-secrets
                  key: service-password
          image: tapis/tapis-files-workers:{{files_image_version}}
          imagePullPolicy: Always
          name: files-workers
          command: {{files_commands|replace("'", "\"")}} 
          stdin: true
          tty: true
      restartPolicy: Always
