apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobs-api
spec:
  selector:
    matchLabels:
      app: jobs-api
  template:
    metadata:
      labels:
        app: jobs-api
    spec:
      initContainers:
      automountServiceAccountToken: false
      {%- if jobs_node_selector == true %}
      nodeSelector:
        exempt: "yes"
      {%- endif %}
      containers:
      - name: jobs-api
        image: tapis/jobsapi:{{jobs_image_version}}
        imagePullPolicy: Always
        ports:
        - name: tomcat1
          containerPort: 8000
        - name: tomcat2
          containerPort: 8080
        - name: tomcat3
          containerPort: 8443
        - name: debug
          containerPort: 6157
        env:
        {%- if jobs_node_name == true %}
        - name: tapis.local.node.name
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {%- endif%}
        - name: tapis.site.id
          valueFrom:
            configMapKeyRef:
              name: jobs-config
              key: site_id
        - name: tapis.tenant.svc.baseurl
          valueFrom:
            configMapKeyRef:
              name: jobs-config
              key: service_site_url
        - name: tapis.service.password
          valueFrom:
            secretKeyRef:
              name: tapis-jobs-secrets
              key: service-password
        - name: tapis.db.connection.pool.size
          value: "10"
        - name: tapis.db.user
          value: "tapis"
        - name: tapis.db.password
          valueFrom:
            secretKeyRef:
              name: tapis-jobs-secrets
              key: tapis-postgres-password
        - name: tapis.db.jdbc.url
          value: "jdbc:postgresql://jobs-postgres:5432/tapisjobsdb"
        - name: tapis.queue.host
          value: jobs-rabbitmq
        - name: tapis.queue.admin.user
          value: "tapis"
        - name: tapis.queue.admin.password
          valueFrom:
            secretKeyRef:
              name: tapis-jobs-secrets
              key: rabbitmq-tapis-password
        - name: tapis.queue.user
          value: "jobs"
        - name: tapis.queue.password
          valueFrom:
            secretKeyRef:
              name: tapis-jobs-secrets
              key: rabbitmq-jobs-password
        - name: tapis.request.logging.filter.prefixes
          value: "/v3/jobs"
        - name: tapis.request.logging.ignore.suffixes
          value: "/healthcheck;/ready;/hello"
#        - name: tapis.log.directory
#          value: "/opt/tomcat/logs"
        - name: CATALINA_OPTS 
          value: "-Xms1g -Xmx3g -agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=6157 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.ssl.need.client.auth=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.rmi.port=6157 -Djava.rmi.server.hostname=jobs-api-debug -Dcom.sun.management.jmxremote.local.only=false"
