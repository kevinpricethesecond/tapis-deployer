user  nginx;
worker_processes  5;

error_log  /dev/stdout  notice;

events {
    worker_connections  4096;
}

### Everything first goes through this stream stanza. Map matches subdomain to port to route to.
### If we no map found, we route to default 8443. This directs back to HTTP stanza as normal.
stream {
    log_format stream_routing '$remote_addr [$time_local] '
                              'with SNI name "$ssl_preread_server_name" '
                              'proxying to "$instanceport" '
                              '$protocol $status $bytes_sent $bytes_received '
                              '$session_time';

    # Maps input string to output variable. Regex works.
    # Ports used are purely random. Feel free to change.
    map $ssl_preread_server_name $instanceport {
        default                  8880;
    }

    # Listen for all incoming requests. Preread server name (for mapping). Then pass. 
    server {
        listen                  80;
        ssl_preread             on;
        access_log /dev/stdout  stream_routing;
        proxy_connect_timeout   20s;  # max time to connect to pserver
        proxy_pass              127.0.0.1:$instanceport;
    }
}


http {
    resolver 10.96.0.10;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;

    sendfile        on;

    keepalive_timeout  65;

    # Configuration for pods.
    server {
        listen 8880;
        charset utf-8;

        access_log /dev/stdout;

        location ~ ^/v3/pods(.*) {
            proxy_pass http://pods-api.{{pods_kube_domain}}:8000/pods$1$is_args$args;
            proxy_set_header Host localhost:5000;
        }

        # custom 40x errors:
        error_page 400 /400.json;
        location /400.json {
            return 400 '{"status": "error", "message": "Invalid request: The Pods service does not know how to fulfill the request.", "version": "unknown", "result": null}';
        }

        error_page 401 /401.json;
        location /401.json {
            return 401 '{"status": "error", "message": "Invalid request: The Pods service does not know how to fulfill the request.", "version": "unknown", "result": null}';
        }

        error_page 402 /402.json;
        location /402.json {
            return 402 '{"status": "error", "message": "Invalid request: The Pods service does not know how to fulfill the request.", "version": "unknown", "result": null}';
        }

        error_page 403 /403.json;
        location /403.json {
            return 403 '{"status": "error", "message": "Invalid request: The Pods service does not know how to fulfill the request.", "version": "unknown", "result": null}';
        }

        error_page 404 /404.json;
        location /404.json {
            return 404 '{"status": "error", "message": "Invalid request: the requested URL is not a Pods endpoint.", "version": "unknown", "result": null}';
        }

        error_page 405 /405.json;
        location /405.json {
            return 405 '{"status": "error", "message": "Invalid request: The Pods service does not know how to fulfill the request.", "version": "unknown", "result": null}';
        }


        # custom 50x errors:
        error_page 500 500.json;
        location /500.json{
            return 500 '{"status": "error", "message": "Unable to parse Pods service response. The server may be misconfigured or overloaded.", "version": "unknown", "result": null}';
        }

        error_page 501 501.json;
        location /501.json{
            return 501 '{"status": "error", "message": "Unable to parse Pods service response. The server may be misconfigured or overloaded.", "version": "unknown", "result": null}';
        }

        error_page 502 502.json;
        location /502.json{
            return 502 '{"status": "error", "message": "Timeout error waiting on Pods service response. The server may be busy or overloaded.", "version": "unknown", "result": null}';
        }

        error_page 503 503.json;
        location /503.json{
            return 503 '{"status": "error", "message": "Unable to parse Pods service response. The server may be misconfigured or overloaded.", "version": "unknown", "result": null}';
        }

        error_page 504 504.json;
        location /504.json{
            return 504 '{"status": "error", "message": "Unable to parse Pods service response. The server may be misconfigured or overloaded.", "version": "unknown", "result": null}';
        }
    }
}

