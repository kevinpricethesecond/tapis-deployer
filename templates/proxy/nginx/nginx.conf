
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # hammock 20211112
    log_format  main  '$remote_addr - $remote_user [$time_local] "$host" "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Redirect all non-encrypted traffic to the encrypted site.
    server
    {
        listen 80;
        listen [::]:80;
    
        # Edit the server_name to reflect the site domain.
        #server_name *.develop.tapis.io;
        server_name  {{proxy_nginx_server_name}};
        #server_name *.*.tapis.io;
        #server_name  _;
    
        # Redirect with 307 to preserve post data. (301 does not)
        if ($request_method = POST) {
            return 307 https://$server_name$request_uri;
        }
    
        # Permanent redirect to the secured site.
        return 301 https://$server_name$request_uri;
    }
    
    # Configuration for the encrypted site.
    server
    {
    
    #    allow 128.62.0.0/16;
    #    allow 128.171.129.132;
    #    allow 128.171.129.133;
    #    allow 128.171.129.134;
    #    allow 128.171.129.135;
    #    allow 132.160.7.0/26;
    #    allow 132.160.120.0/21;
    #    allow 129.114.0.0/17;
    #    allow 127.0.0.1;
    #    deny all;
    
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
    
        # Edit the server_name the reflect the site domain.
        #server_name  _;
        #server_name *.develop.tapis.io;
        server_name  {{proxy_nginx_server_name}}
        #server_name *.*.tapis.io;
    
        # Update these paths the correct cer and key files.
        ssl_certificate /tmp/ssl/tls.crt;
        ssl_certificate_key /tmp/ssl/tls.key;
    
        # SSL configs. Do not change.
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        add_header Strict-Transport-Security "max-age=63072000" always;
        ssl_stapling on;
        ssl_stapling_verify on;
    
        charset utf-8;
        keepalive_timeout 5;
    
        #CORS support
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,x-tapis-token' always;
    
        # big upload support
        proxy_connect_timeout 3600;
        proxy_send_timeout    3600;
        proxy_read_timeout    3600;
        send_timeout          3600;
    
    #    location /
    #    {
    #        rewrite https://tapis.io break;
    #    }
        {% if "authenticator" in proxy_nginx_service_list %}
        location /v3/oauth2
        {
    #        auth_request /_auth;
            proxy_pass http://authenticator-api:5000;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
    
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,x-tapis-token';
                return 204;
            }
    
        }
        {% endif %}
        location /v3/site-router
        {
           # this location intentionally does NOT get an auth_request directive since the site-router endpoints IS the target of auth_request.
           proxy_pass http://site-router-api:8000;
           proxy_redirect off;
           proxy_set_header Host $host;
        }
        {% if "security" in proxy_nginx_service_list %} 
        location /v3/security
        {
    #        auth_request /_auth;
            proxy_pass http://sk-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        } 
        {% endif %}
        {% if "tenants" in proxy_nginx_service_list %}
        location /v3/tenants
        {
    
            auth_request /_auth;
            proxy_pass http://tenants-api:5000;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        location /_auth {
            internal;
           
            # check to see if either of the x-tapis-tenant or x-tapis-user are set then return 200
            set $x_tenant $http_x_tapis_tenant;
            set $x_user $http_x_tapis_user;
            if ($x_tenant){
              return 200;
            }
    
            if ($x_user){
              return 200;
            }
    
            # if $token is not set (i.e., if x-tapis-token was sent) then return 200
            set $token $http_x_tapis_token;
            if ($token ~ "^$") {
              return 200; 
    	}
            proxy_method GET;
            proxy_set_header X-Tapis-Token $http_x_tapis_token;
            proxy_pass https://admin.develop.tapis.io/v3/site-router/check;
          }
    
        {% if "tenants" in proxy_nginx_service_list %}
        location /v3/sites
        {
    #        auth_request /_auth;
            proxy_pass http://tenants-api:5000;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "meta" in proxy_nginx_service_list %}
        location /v3/meta
        {
    #        auth_request /_auth;
            proxy_pass http://restheart-security:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "streams" in proxy_nginx_service_list %}
        location /v3/streams
        {
    #        auth_request /_auth;
            proxy_pass http://streams-api:5000;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,x-tapis-token';
                return 204;
            }
        }
        {% endif %}
        {% if "files" in proxy_nginx_service_list %}
        location /v3/files
        {
    #        auth_request /_auth;
            proxy_pass http://files-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
            client_max_body_size 50G;
        }
        {% endif %}
        {% if "systems" in proxy_nginx_service_list %}
        location /v3/systems
        {
    #        auth_request /_auth;
            proxy_pass http://systems-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "tokens" in proxy_nginx_service_list %}
        location /v3/tokens
        {
            # we intentionally do NOT include an auth_request for Tokens because tokens only handles service requests.
            proxy_pass http://tokens-api:5000;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "jobs" in proxy_nginx_service_list %}
        location /v3/jobs
        {
    #        auth_request /_auth;
            proxy_pass http://jobs-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "actors" in proxy_nginx_service_list %}
        location /v3/actors
        {
    #        auth_request /_auth;
            proxy_pass http://actors-nginx:80;
            proxy_redirect off;
            proxy_set_header Host $host;
        }
        {% endif %}        
        {% if "apps" in proxy_nginx_service_list %}
        location /v3/apps
        {
    #        auth_request /_auth;
            proxy_pass http://apps-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
        {% if "monitoring" in proxy_nginx_service_list %}
        location /grafana/
        {
            proxy_pass http://monitoring-grafana:3000;
            proxy_redirect off;
            proxy_set_header Host $host;
        }
        {% endif %}
        {% if "pgrest" in proxy_nginx_service_list %}
        location /v3/pgrest
        {
    #        auth_request /_auth;
            proxy_pass http://pgrest-api:5000;
            proxy_redirect off;
            proxy_set_header Host $host;
        }
        {% endif %}
        {% if "notifications" in proxy_nginx_service_list %}
        location /v3/notifications
        {
    #        auth_request /_auth;
            proxy_pass http://notifications-api:8080;
            proxy_redirect off;
            proxy_set_header Host localhost:5000;
        }
        {% endif %}
    }
}
