---

- name: Generate Tapis Deployment Code
  hosts: tapis_installs

  vars: 
    tapisctl_action: 'generate'

  tasks: 
  - name: Set default values for vars
    include_role: 
      name: get_defaults

  - name: create tapisdir 
    file: 
      path: '{{ tapisdir }}'
      state: directory

  # - name: debug remote hosts
  #   ansible.builtin.debug:
  #     msg: "{{ vars }}"

  # - name: debug1 is multinode?
  #   ansible.builtin.debug:
  #     msg: "{{ inventory_hostname }} is remote? : {{ is_remote }}"
  #   vars:
  #     is_remote: "{{ True if remote else False }}"

  - name: set hostname facts for remote hosts
    block:
      - name: increment ports
        ansible.builtin.set_fact:
          "{{ item }}_port": "{{ 8080 + indexnum }}"
          cacheable: True
        # ansible.builtin.debug:
        #   msg: "{{ item }}_port: {{ 8080 + indexnum }}"
        loop_control:
          index_var: indexnum
        loop: "{{ components_to_deploy }}"

      - name: map components to hosts
        ansible.builtin.set_fact: 
          "{{ item }}_host": "https://{{ inventory_hostname }}"
          cacheable: True
        loop: "{{ components_to_deploy }}"

      - name: generate proxy/location files for each host
        include_role:
          name: 'proxy'

    when: remote is defined and remote
    
      
      

### tapis components

  - name: baseburnup role
    include_role:
      name: baseburnup

  - name: generate tapis components
    include_role:
      name: '{{ comp }}'
    loop: '{{ components_to_deploy }}'
    loop_control:
      loop_var: comp


