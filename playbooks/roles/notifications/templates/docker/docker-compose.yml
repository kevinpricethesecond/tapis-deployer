
networks:
  tapis:
    name: tapis
    external: true


services:

  notifications-api:
    container_name: notifications-api
    user: ${UID_GID}
    image: {{ notifications_api_image }} 
    environment:
      - TAPIS_SITE_ID={{ notifications_service_site_id }}
      - TAPIS_TENANT_SVC_BASEURL={{ notifications_service_url }}
      - TAPIS_DB_JDBC_URL=jdbc:postgresql://notifications-postgres:5432/tapisntfdb
      - TAPIS_DB_USER=tapis_ntf
      - TAPIS_QUEUE_HOST=notifications-rabbitmq
      - TAPIS_QUEUE_ADMIN_USER=tapis
      - TAPIS_QUEUE_USER=notif
    env_file:
      - {{ tapisdatadir }}/notifications/env
    networks: 
      - tapis
    depends_on:
      notifications-postgres:
        condition: service_healthy
      notifications-rabbitmq:
        condition: service_healthy
    command: java -Xms{{ notifications_heap_min }} -Xmx{{ notifications_heap_max }} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED -cp "notifications.jar:dependencies/*" edu.utexas.tacc.tapis.notifications.api.NotificationsApplication

  notifications-init-db:
    container_name: notifications-init-db
    image: {{ notifications_postgres_image }}
    command: bash -c "chmod +x /tmp/notifications-init-db-sh && /tmp/notifications-init-db-sh"
    volumes:
      - ./notifications-init-db-sh:/tmp/notifications-init-db-sh
    env_file:
      - {{ tapisdatadir }}/notifications/env
    networks: 
      - tapis
    depends_on:
      notifications-postgres:
        condition: service_healthy

  notifications-postgres:
    container_name: notifications-postgres
    image: {{ notifications_postgres_image }}
    environment:
      - PGDATA=/pgdata/data
    env_file:
      - {{ tapisdatadir }}/notifications/env
    networks: 
      - tapis
    volumes:
      - {{ tapisdatadir }}/notifications/postgres:/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

#  notifications-pgadmin:
#    container_name: notifications-pgadmin
#    image: {{ notifications_pgadmin_image }}
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=wow@example.com
#    env_file:
#      - {{ tapisdatadir }}/notifications/env
#    networks:
#      - tapis
#    depends_on:
#      notifications-postgres:
#        condition: service_healthy
#      notifications-rabbitmq:
#        condition: service_healthy

  notifications-dispatcher:
    container_name: notifications-dispatcher
    user: ${UID_GID}
    image: {{ notifications_dispatcher_image }}
    environment:
      - TAPIS_SITE_ID={{ notifications_service_site_id }}
      - TAPIS_TENANT_SVC_BASEURL={{ notifications_service_url }}
      - TAPIS_DB_JDBC_URL=jdbc:postgresql://notifications-postgres:5432/tapisntfdb
      - TAPIS_DB_USER=tapis_ntf
      - TAPIS_QUEUE_HOST=notifications-rabbitmq
      - TAPIS_QUEUE_ADMIN_USER=tapis
      - TAPIS_QUEUE_USER=notif
    env_file:
      - {{ tapisdatadir }}/notifications/env
    networks:
      - tapis
    command: java -Xms{{ notifications_heap_min }} -Xmx{{ notifications_heap_max }} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED -cp "notifications.jar:dependencies/*" edu.utexas.tacc.tapis.notifications.DispatchApplication
    depends_on:
      notifications-postgres:
        condition: service_healthy
      notifications-rabbitmq:
        condition: service_healthy

  notifications-rabbitmq:
    container_name: notifications-rabbitmq
    image: {{ notifications_rabbitmq_image }}
    environment:
      - HOSTNAME=notifications-rabbitmq
      - RABBITMQ_HOSTNAME=notifications-rabbitmq
      - RABBITMQ_DEFAULT_USER=tapis
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=2147483648
    env_file: 
      - {{ tapisdatadir }}/notifications/env
    volumes:
      - {{ tapisdatadir }}/notifications/notifications-rabbitmq-data:/var/lib/rabbitmq/mnesia
    networks:
      - tapis
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 30s
      timeout: 5s
      retries: 3
    #depends_on:
    #  notifications-postgres:
    #    condition: service_healthy
    #  notifications-init-db:
    #    condition: service_completed_successfully
