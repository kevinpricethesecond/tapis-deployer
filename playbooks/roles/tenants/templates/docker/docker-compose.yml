---

networks:
  tapis:
    name: tapis
    external: true

services:

  tenants-postgres:
    container_name: tenants-postgres
    restart_policy: unless-stopped
    image: {{ tenants_postgres_image }}
    volumes:
      - {{ tapisdatadir }}/tenants/postgres:/pgdata
      - ./tenants-config.json:/home/tapis/config.json
    networks:
      - tapis
    environment:
      #- POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/pgdata/data
      - POSTGRES_USER=tenants
      - POSTGRES_DB=tenants
    env_file:
      - {{ tapisdatadir }}/tenants/env
    healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]

  tenants-migrations:
    container_name: tenants-migrations
    restart_policy: unless-stopped
    image: {{ tenants_migrations_image }}
    volumes:
      - ./tenants-config.json:/home/tapis/config.json
    networks:
      - tapis
    depends_on:
      tenants-postgres:
        condition: service_healthy
    environment: 
      - sql_db_url={{ tenants_postgres_url }} 
      - postgres_user=tenants 
      - postgres_database=tenants
    env_file: 
      - {{ tapisdatadir }}/tenants/env
    command: ['upgrade']

  tenants-api:
    container_name: tenants-api
    restart_policy: unless-stopped
    image: {{ tenants_api_image }}
    volumes:
    #   - ./service.log:/home/tapis/service.log
      - ./tenants-config.json:/home/tapis/config.json
      - ./tenants-service.log:/home/tapis/service.log
    networks:
      - tapis
    environment:
      - sql_db_url={{ tenants_postgres_url }}
      - postgres_user=tenants
      - postgres_database=tenants
    env_file: 
      - {{ tapisdatadir }}/tenants/env
    depends_on:
      tenants-migrations:
        condition: service_completed_successfully
      tenants-postgres:
        condition: service_healthy
