#!/bin/bash

# This program deletes the long-lived SK secret (basically database
# passwords), extracts the current values from Vault, and installs
# them in Kubernetes secrets.

if [ ! -f ~/vault-token ]
then
  echo "boo. need to create ~/vault-token"
  exit 1
fi

# Put the Tapis administrative vault token into a local variable.
VAULT_TOKEN=`cat ~/vault-token`

# Delete and assign the SK database secrets.
kubectl delete secret tapis-sk-secrets
kubectl create secret generic tapis-sk-secrets --from-literal=pgadmin-password=`curl -s -H "X-Vault-Token: $VAULT_TOKEN" {{skadmin_vault_url}}/v1/secret/data/tapis/service/pgadmin/dbhost/sk-postgres/dbname/tapissecdb/dbuser/wow/credentials/passwords | jq -r .data.data.password` --from-literal=postgres-password=`curl -s -H "X-Vault-Token: $VAULT_TOKEN" {{skadmin_vault_url}}/v1/secret/data/tapis/service/postgres/dbhost/sk-postgres/dbname/tapissecdb/dbuser/postgres/credentials/passwords | jq -r .data.data.password` --from-literal=tapis-postgres-password=`curl -s -H "X-Vault-Token: $VAULT_TOKEN" {{skadmin_vault_url}}/v1/secret/data/tapis/service/postgres/dbhost/sk-postgres/dbname/tapissecdb/dbuser/tapis/credentials/passwords | jq -r .data.data.password`

