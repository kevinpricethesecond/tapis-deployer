
networks:
    tapis:
        name: tapis
        external: true
    

services:
  vault-roles:
    container_name: vault-roles
    image: {{ skadmin_util_image }}
    networks:
      - tapis
    environment: 
      - SKEXPORT_PARMS=-vtok $VAULT_TOKEN -vurl {{ skadmin_vault_url }} -noskip
      - VTOK
      - VAULT_TOKEN
    volumes:
      - {{ tapisdir }}/skadmin/create-sk-roles:/tmp/create-sk-roles 
      - {{ tapisdir }}/skadmin/tapis-vault/policies/sk:/tmp/sk-policies 
      - {{ tapisdir }}/skadmin/tapis-vault/policies/sk-admin:/tmp/sk-admin-policies 
      - {{ tapisdir }}/skadmin/tapis-vault/roles:/tmp/sk-roles 
      - {{ tapisdatadir }}/vault/vault-token:/.VTOK
    command: /tmp/create-sk-roles


# create vault roles and policies
# docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN --env SKEXPORT_PARMS \
# -v {{ tapisdir }}/skadmin/create-sk-roles:/tmp/create-sk-roles \
# -v {{ tapisdir }}/skadmin/tapis-vault/policies/sk:/tmp/sk-policies \
# -v {{ tapisdir }}/skadmin/tapis-vault/policies/sk-admin:/tmp/sk-admin-policies \
# -v {{ tapisdir }}/skadmin/tapis-vault/roles:/tmp/sk-roles \
# {{ skadmin_util_image }} /tmp/create-sk-roles

# export VAULT_SECRETID=`docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN \
# {{ skadmin_util_image }} curl -s -X POST -H "X-Vault-Token: $VAULT_TOKEN" http://vault:8200/v1/auth/approle/role/sk/secret-id | jq -r .data.secret_id`

# export VAULT_ROLEID=`docker run --name skadmin-presetup -it --rm --net tapis --env VAULT_TOKEN \
# {{ skadmin_util_image }} curl -s -X GET -H "X-Vault-Token: $VAULT_TOKEN" http://vault:8200/v1/auth/approle/role/sk/role-id | jq -r .data.role_id`

# create tapis passwords in vault
# docker run --name skadmin-init -it --rm --net tapis --env VAULT_ROLEID --env VAULT_SECRETID \
# -v {{ tapisdir }}/skadmin/initialLoad:/tmp/initialLoad \
# -v {{ tapisdir }}/skadmin/run-sk-admin:/tmp/run-sk-admin \
# {{ skadmin_securityadmin_image }} /tmp/run-sk-admin
#   vault-passwords:
#     container_name: vault-passwords
#     image: {{ skadmin_util_image }}
#     networks:
#       - tapis
#     env_file:
#       - {{ tapisdatadir }}/vault/vault-token


# {%- if site_type == 2 %}
# echo "Collecting public keys for associate site tenants. Please send these to your tenants admin before next steps in deployment."
# cd $here/../admin
# ./get-assocsite-publickeys
# {%- endif %}


# # export tapis passwords to env file
# mkdir -p {{ tapisdatadir }}/skadmin
# docker run --name skadmin-export -it --rm --net tapis --env SKEXPORT_PARMS {{ skadmin_securityexport_image }} > {{ tapisdatadir }}/skadmin/env
