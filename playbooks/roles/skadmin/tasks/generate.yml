---


- name: skadmin tree
  include_role:
    name: template-filetree
  vars:
    calling_rolename: skadmin
    tree_name: skadmin

# if using docker, create data dirs
- name: create data dirs
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - '{{ tapisdatadir }}/skadmin'
  when: tapisflavor == "docker"

# "{{ lookup('ansible.builtin.file', '{{ tapisdatadir }}/vault/vault-token') }}"
#- name: get or create blank SK_VAULT_ROLEID
#  block:
#    - name: Get content of SK_VAULT_ROLEID
#      ansible.builtin.debug: var=item
#      with_file: 
#        - '{{ tapisdatadir }}/skadmin/SK_VAULT_ROLEID'
#      register: SK_VAULT_ROLEID
#  rescue:
#    - ansible.builtin.debug:
#        msg: "failure!"

#- name: create env file 
#  copy:
#    dest: '{{ tapisdatadir }}/skadmin/env'
#    content: |
#      service_site_url={{ skadmin_service_url }}
#      service_tenant_id={{ skadmin_service_tenant_id }}
#      site_id={{ skadmin_service_site_id }}
#      service_name={{ skadmin_service_name }}
#      VAULT_ADDR={{ skadmin_vault_url }}
#      SK_VAULT_ROLEID=""
#      SK_VAULT_SECRETID=""
#      vurl={{ skadmin_vault_url }}
#
#  when: tapisflavor == "docker"

#- name: create env file 
#  ini_file:
#    path: '{{ tapisdatadir }}/skadmin/env'
#    section: null
#    option: "{{ item.option }}"
#    value: "{{ item.value }}"
#  with_items:
#    - { option: service_site_url, value: '{{ skadmin_service_url }}' } 
#    - { option: service_tenant_id, value: '{{ skadmin_service_tenant_id }}' }
#    - { option: site_id, value: '{{ skadmin_service_site_id }}' }
#    - { option: service_name, value: '{{ skadmin_service_name }}' }
#    - { option: VAULT_ADDR, value: '{{ skadmin_vault_url }}' }
#    - { option: SK_VAULT_ROLEID, value: '' }
#    - { option: SK_VAULT_SECRETID, value: '' }
#    - { option: vurl, value: '{{ skadmin_vault_url }}' }
#  when: tapisflavor == "docker"


#- name: add vault token to skadmin env file 
#  copy:
#    dest: '{{ tapisdatadir }}/skadmin/env'
#    content: |
#      VAULT_TOKEN={{ lookup('ansible.builtin.file', '{{ tapisdatadir }}/vault/vault-token') }}
#      vtok={{ lookup('ansible.builtin.file', '{{ tapisdatadir }}/vault/vault-token') }}
#  ignore_errors: true
#  when: tapisflavor == "docker"

#- name: if available, add vault token to skadmin env file
#  community.general.ini_file:
#    path: '{{ tapisdatadir }}/skadmin/env'
#    section: null
#    option: VAULT_TOKEN
#    value: '{{ lookup("ansible.builtin.file", "{{ tapisdatadir }}/vault/vault-token") }}'
#  when: tapisflavor == "docker"
#  ignore_errors: true
